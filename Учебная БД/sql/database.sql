-- This script was generated by the ERD tool in pgAdmin 4.
-- Please log an issue at https://github.com/pgadmin-org/pgadmin4/issues/new/choose if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS public.client
(
    id serial NOT NULL,
    full_name character varying(30) COLLATE pg_catalog."default" NOT NULL,
    passport_num integer,
    date_of_birth date,
    phone integer,
    disc_card boolean,
    total_amount real,
    passport_series integer,
    issue_date date,
    "Issued_by" character varying(30) COLLATE pg_catalog."default",
    discount_percentage integer DEFAULT 0,
    CONSTRAINT client_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.invoice
(
    id serial NOT NULL,
    date date,
    CONSTRAINT invoice_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.product
(
    id serial NOT NULL,
    name character varying(128) COLLATE pg_catalog."default" NOT NULL,
    remains integer NOT NULL,
    product_type_id integer,
    store_id integer,
    unit_id integer,
    price real,
    CONSTRAINT product_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.product_type
(
    id serial NOT NULL,
    name character varying(30) COLLATE pg_catalog."default",
    CONSTRAINT product_type_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.recived_product
(
    id serial NOT NULL,
    quantity integer,
    invoice_id integer,
    product_id integer,
    price real,
    CONSTRAINT recived_product_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.sale
(
    id serial NOT NULL,
    date date,
    client_id integer,
    CONSTRAINT sale_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.shop
(
    id serial NOT NULL,
    name character varying(30) COLLATE pg_catalog."default",
    short_name character varying(15) COLLATE pg_catalog."default",
    CONSTRAINT shop_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.sold_product
(
    id serial NOT NULL,
    quantity integer,
    product_id integer NOT NULL,
    sale_id integer NOT NULL,
    price real,
    CONSTRAINT sold_product_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.unit
(
    id serial NOT NULL,
    name character varying(30) COLLATE pg_catalog."default",
    short_name character varying(15) COLLATE pg_catalog."default",
    CONSTRAINT unit_pkey PRIMARY KEY (id)
);

ALTER TABLE IF EXISTS public.product
    ADD CONSTRAINT product_type_id_fk FOREIGN KEY (product_type_id)
    REFERENCES public.product_type (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.product
    ADD CONSTRAINT store_id_fk FOREIGN KEY (store_id)
    REFERENCES public.shop (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.product
    ADD CONSTRAINT unit_id_fk FOREIGN KEY (unit_id)
    REFERENCES public.unit (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.recived_product
    ADD CONSTRAINT invoice_id_fk FOREIGN KEY (invoice_id)
    REFERENCES public.invoice (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.recived_product
    ADD CONSTRAINT product_id_fk FOREIGN KEY (product_id)
    REFERENCES public.product (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.sale
    ADD CONSTRAINT client_id_fk FOREIGN KEY (client_id)
    REFERENCES public.client (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.sold_product
    ADD CONSTRAINT sold_product_product_id_fkey FOREIGN KEY (product_id)
    REFERENCES public.product (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.sold_product
    ADD CONSTRAINT sold_product_sale_id_fkey FOREIGN KEY (sale_id)
    REFERENCES public.sale (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;

END;